The brain-python-interface package runs on top of many different open-source packages. Broadly, the core functionality can be split into a few main components:

	- Task-related finite state machines 
	- Task graphics
	- Logging records of experiments in the database
	- Integrating the behavioral task and various data sources
	- User interface (UI) through the web browser

These topics are organized roughly from easiest to hardest in terms of what fraction of the software is involved. 

Logging records of experiments in databases
===========================================
Runs of each task can be stored to a database using the Django webserver. Our application uses only a simple subset of what django was intended for (complex websites). 

Django natively supports three types of databases. We use sqlite3, the least capable of these databases. This type of database was selected because we do not need (or want) multiple agents to have the ability to write to the database at once, since writing to the database should happen only during the experiments, which must only happen in one place. 

The database code of course resides in $BMI3D/db. We recommend that you go through the introductory Django tutorial (https://docs.djangoproject.com/en/dev/intro/tutorial01/), which shows you how to build a simple Django application fairly similar to what we do during the experiment logging (though with a less complicated user interface). 

The heart of any django application are the database models ($BMI3D/db/models.py), which describe which data tables are in the database and which fiels are in each table. The key model is the TaskEntry model. A new TaskEntry record is created in the database when a new task is run using the "Start Experiment" button. 


Integrating the behavioral task and various data sources
========================================================

User interface (UI) through the web browser
===========================================